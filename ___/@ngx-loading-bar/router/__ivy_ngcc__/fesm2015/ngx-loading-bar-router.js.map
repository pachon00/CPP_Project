{"version":3,"file":"ngx-loading-bar-router.js","sources":["ng:/@ngx-loading-bar/router/router.module.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,MAca,sBAAsB;;;;;IACjC,YAAY,MAAc,EAAE,UAA6B;QACvD,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK;;kBACrB,KAAK,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC;YACpD,IAAI,KAAK,IAAI,KAAK,CAAC,gBAAgB,EAAE;gBACnC,OAAO;aACR;YAED,IAAI,KAAK,YAAY,eAAe,EAAE;gBACpC,UAAU,CAAC,KAAK,EAAE,CAAC;aACpB;YAED,KAAK,KAAK,YAAY,eAAe,IAAI,KAAK,YAAY,aAAa,IAAI,KAAK,YAAY,gBAAgB,GAAG;gBAC7G,UAAU,CAAC,QAAQ,EAAE,CAAC;aACvB;SACF,CAAC,CAAC;KACJ;;;;;;IAEO,yBAAyB,CAAC,MAAW;;;cAErC,iBAAiB,GAAG,MAAM,CAAC,oBAAoB,IAAI,MAAM,CAAC,oBAAoB,EAAE;QACtF,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,MAAM,EAAE;YACjD,OAAO,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC;SACvC;QAED,OAAO,EAAE,CAAC;KACX;;;;;;;;CACF,4BA3BI;;GAVJ,QAAQ,SAAC,kBACR,OAAO,EAAE;qBACP,TALmB,MAAM;WAKb,CAJW,iBAAiB;CAKxC;cAAgB,mBACjB,kBACD,OAAO,EAAE,sBACP,YAAY,sBACZ,gBAAgB,mBACjB;GACF;;;;;;;;;;;;;;2GAXgD","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Router, NavigationStart, NavigationError, NavigationEnd, NavigationCancel } from '@angular/router';\nimport { LoadingBarModule, LoadingBarService } from '@ngx-loading-bar/core';\n\n@NgModule({\n  imports: [\n    RouterModule,\n    LoadingBarModule,\n  ],\n  exports: [\n    RouterModule,\n    LoadingBarModule,\n  ],\n})\nexport class LoadingBarRouterModule {\n  constructor(router: Router, loadingBar: LoadingBarService) {\n    router.events.subscribe(event => {\n      const state = this.getCurrentNavigationState(router);\n      if (state && state.ignoreLoadingBar) {\n        return;\n      }\n\n      if (event instanceof NavigationStart) {\n        loadingBar.start();\n      }\n\n      if ((event instanceof NavigationError || event instanceof NavigationEnd || event instanceof NavigationCancel)) {\n        loadingBar.complete();\n      }\n    });\n  }\n\n  private getCurrentNavigationState(router: any) {\n    // `getCurrentNavigation` only available in angular `7.2`\n    const currentNavigation = router.getCurrentNavigation && router.getCurrentNavigation();\n    if (currentNavigation && currentNavigation.extras) {\n      return currentNavigation.extras.state;\n    }\n\n    return {};\n  }\n}\n"]}