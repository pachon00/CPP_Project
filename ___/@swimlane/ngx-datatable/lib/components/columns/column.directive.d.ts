import { TemplateRef, OnChanges } from '@angular/core';
import { ColumnChangesService } from '../../services/column-changes.service';
import { TableColumnProp } from '../../types/table-column.type';
import * as ɵngcc0 from '@angular/core';
export declare class DataTableColumnDirective implements OnChanges {
    private columnChangesService;
    name: string;
    prop: TableColumnProp;
    frozenLeft: any;
    frozenRight: any;
    flexGrow: number;
    resizeable: boolean;
    comparator: any;
    pipe: any;
    sortable: boolean;
    draggable: boolean;
    canAutoResize: boolean;
    minWidth: number;
    width: number;
    maxWidth: number;
    checkboxable: boolean;
    headerCheckboxable: boolean;
    headerClass: string | ((data: any) => string | any);
    cellClass: string | ((data: any) => string | any);
    isTreeColumn: boolean;
    treeLevelIndent: number;
    summaryFunc: (cells: any[]) => any;
    summaryTemplate: TemplateRef<any>;
    _cellTemplateInput: TemplateRef<any>;
    _cellTemplateQuery: TemplateRef<any>;
    readonly cellTemplate: TemplateRef<any>;
    _headerTemplateInput: TemplateRef<any>;
    _headerTemplateQuery: TemplateRef<any>;
    readonly headerTemplate: TemplateRef<any>;
    _treeToggleTemplateInput: TemplateRef<any>;
    _treeToggleTemplateQuery: TemplateRef<any>;
    readonly treeToggleTemplate: TemplateRef<any>;
    private isFirstChange;
    constructor(columnChangesService: ColumnChangesService);
    ngOnChanges(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataTableColumnDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DataTableColumnDirective, "ngx-datatable-column", never, {
    "name": "name";
    "prop": "prop";
    "frozenLeft": "frozenLeft";
    "frozenRight": "frozenRight";
    "flexGrow": "flexGrow";
    "resizeable": "resizeable";
    "comparator": "comparator";
    "pipe": "pipe";
    "sortable": "sortable";
    "draggable": "draggable";
    "canAutoResize": "canAutoResize";
    "minWidth": "minWidth";
    "width": "width";
    "maxWidth": "maxWidth";
    "checkboxable": "checkboxable";
    "headerCheckboxable": "headerCheckboxable";
    "headerClass": "headerClass";
    "cellClass": "cellClass";
    "isTreeColumn": "isTreeColumn";
    "treeLevelIndent": "treeLevelIndent";
    "summaryFunc": "summaryFunc";
    "summaryTemplate": "summaryTemplate";
    "_cellTemplateInput": "cellTemplate";
    "_headerTemplateInput": "headerTemplate";
    "_treeToggleTemplateInput": "treeToggleTemplate";
}, {}, ["_cellTemplateQuery", "_headerTemplateQuery", "_treeToggleTemplateQuery"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJjb2x1bW4uZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW9DQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRlbXBsYXRlUmVmLCBPbkNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbHVtbkNoYW5nZXNTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvY29sdW1uLWNoYW5nZXMuc2VydmljZSc7XG5pbXBvcnQgeyBUYWJsZUNvbHVtblByb3AgfSBmcm9tICcuLi8uLi90eXBlcy90YWJsZS1jb2x1bW4udHlwZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEYXRhVGFibGVDb2x1bW5EaXJlY3RpdmUgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgY29sdW1uQ2hhbmdlc1NlcnZpY2U7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIHByb3A6IFRhYmxlQ29sdW1uUHJvcDtcbiAgICBmcm96ZW5MZWZ0OiBhbnk7XG4gICAgZnJvemVuUmlnaHQ6IGFueTtcbiAgICBmbGV4R3JvdzogbnVtYmVyO1xuICAgIHJlc2l6ZWFibGU6IGJvb2xlYW47XG4gICAgY29tcGFyYXRvcjogYW55O1xuICAgIHBpcGU6IGFueTtcbiAgICBzb3J0YWJsZTogYm9vbGVhbjtcbiAgICBkcmFnZ2FibGU6IGJvb2xlYW47XG4gICAgY2FuQXV0b1Jlc2l6ZTogYm9vbGVhbjtcbiAgICBtaW5XaWR0aDogbnVtYmVyO1xuICAgIHdpZHRoOiBudW1iZXI7XG4gICAgbWF4V2lkdGg6IG51bWJlcjtcbiAgICBjaGVja2JveGFibGU6IGJvb2xlYW47XG4gICAgaGVhZGVyQ2hlY2tib3hhYmxlOiBib29sZWFuO1xuICAgIGhlYWRlckNsYXNzOiBzdHJpbmcgfCAoKGRhdGE6IGFueSkgPT4gc3RyaW5nIHwgYW55KTtcbiAgICBjZWxsQ2xhc3M6IHN0cmluZyB8ICgoZGF0YTogYW55KSA9PiBzdHJpbmcgfCBhbnkpO1xuICAgIGlzVHJlZUNvbHVtbjogYm9vbGVhbjtcbiAgICB0cmVlTGV2ZWxJbmRlbnQ6IG51bWJlcjtcbiAgICBzdW1tYXJ5RnVuYzogKGNlbGxzOiBhbnlbXSkgPT4gYW55O1xuICAgIHN1bW1hcnlUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBfY2VsbFRlbXBsYXRlSW5wdXQ6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgX2NlbGxUZW1wbGF0ZVF1ZXJ5OiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIHJlYWRvbmx5IGNlbGxUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBfaGVhZGVyVGVtcGxhdGVJbnB1dDogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBfaGVhZGVyVGVtcGxhdGVRdWVyeTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICByZWFkb25seSBoZWFkZXJUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBfdHJlZVRvZ2dsZVRlbXBsYXRlSW5wdXQ6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgX3RyZWVUb2dnbGVUZW1wbGF0ZVF1ZXJ5OiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIHJlYWRvbmx5IHRyZWVUb2dnbGVUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBwcml2YXRlIGlzRmlyc3RDaGFuZ2U7XG4gICAgY29uc3RydWN0b3IoY29sdW1uQ2hhbmdlc1NlcnZpY2U6IENvbHVtbkNoYW5nZXNTZXJ2aWNlKTtcbiAgICBuZ09uQ2hhbmdlcygpOiB2b2lkO1xufVxuIl19