import { EventEmitter, TemplateRef } from '@angular/core';
import { ViewDimensions } from '../common/view-dimensions.helper';
import { ColorHelper } from '../common/color.helper';
import { BaseChartComponent } from '../common/base-chart.component';
import * as ɵngcc0 from '@angular/core';
export declare class AreaChartComponent extends BaseChartComponent {
    legend: any;
    legendTitle: string;
    legendPosition: string;
    state: any;
    xAxis: any;
    yAxis: any;
    baseValue: any;
    autoScale: any;
    showXAxisLabel: any;
    showYAxisLabel: any;
    xAxisLabel: any;
    yAxisLabel: any;
    timeline: any;
    gradient: boolean;
    showGridLines: boolean;
    curve: any;
    activeEntries: any[];
    schemeType: string;
    trimXAxisTicks: boolean;
    trimYAxisTicks: boolean;
    rotateXAxisTicks: boolean;
    maxXAxisTickLength: number;
    maxYAxisTickLength: number;
    xAxisTickFormatting: any;
    yAxisTickFormatting: any;
    xAxisTicks: any[];
    yAxisTicks: any[];
    roundDomains: boolean;
    tooltipDisabled: boolean;
    xScaleMin: any;
    xScaleMax: any;
    yScaleMin: number;
    yScaleMax: number;
    activate: EventEmitter<any>;
    deactivate: EventEmitter<any>;
    tooltipTemplate: TemplateRef<any>;
    seriesTooltipTemplate: TemplateRef<any>;
    dims: ViewDimensions;
    xSet: any;
    xDomain: any;
    yDomain: any;
    seriesDomain: any;
    xScale: any;
    yScale: any;
    transform: string;
    colors: ColorHelper;
    clipPathId: string;
    clipPath: string;
    scaleType: string;
    series: any;
    margin: number[];
    hoveredVertical: any;
    xAxisHeight: number;
    yAxisWidth: number;
    filteredDomain: any;
    legendOptions: any;
    timelineWidth: any;
    timelineHeight: number;
    timelineXScale: any;
    timelineYScale: any;
    timelineXDomain: any;
    timelineTransform: any;
    timelinePadding: number;
    update(): void;
    updateTimeline(): void;
    getXDomain(): any[];
    getYDomain(): any[];
    getSeriesDomain(): any[];
    getXScale(domain: any, width: any): any;
    getYScale(domain: any, height: any): any;
    getScaleType(values: any): string;
    isDate(value: any): boolean;
    updateDomain(domain: any): void;
    updateHoveredVertical(item: any): void;
    hideCircles(): void;
    onClick(data: any, series?: any): void;
    trackBy(index: any, item: any): string;
    setColors(): void;
    getLegendOptions(): {
        scaleType: string;
        colors: any;
        domain: any[];
        title: any;
        position: string;
    };
    updateYAxisWidth({ width }: {
        width: any;
    }): void;
    updateXAxisHeight({ height }: {
        height: any;
    }): void;
    onActivate(item: any): void;
    onDeactivate(item: any): void;
    deactivateAll(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AreaChartComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AreaChartComponent, "ngx-charts-area-chart", never, {
    "legendTitle": "legendTitle";
    "legendPosition": "legendPosition";
    "baseValue": "baseValue";
    "showGridLines": "showGridLines";
    "curve": "curve";
    "activeEntries": "activeEntries";
    "trimXAxisTicks": "trimXAxisTicks";
    "trimYAxisTicks": "trimYAxisTicks";
    "rotateXAxisTicks": "rotateXAxisTicks";
    "maxXAxisTickLength": "maxXAxisTickLength";
    "maxYAxisTickLength": "maxYAxisTickLength";
    "roundDomains": "roundDomains";
    "tooltipDisabled": "tooltipDisabled";
    "legend": "legend";
    "state": "state";
    "xAxis": "xAxis";
    "yAxis": "yAxis";
    "autoScale": "autoScale";
    "showXAxisLabel": "showXAxisLabel";
    "showYAxisLabel": "showYAxisLabel";
    "xAxisLabel": "xAxisLabel";
    "yAxisLabel": "yAxisLabel";
    "timeline": "timeline";
    "gradient": "gradient";
    "schemeType": "schemeType";
    "xAxisTickFormatting": "xAxisTickFormatting";
    "yAxisTickFormatting": "yAxisTickFormatting";
    "xAxisTicks": "xAxisTicks";
    "yAxisTicks": "yAxisTicks";
    "xScaleMin": "xScaleMin";
    "xScaleMax": "xScaleMax";
    "yScaleMin": "yScaleMin";
    "yScaleMax": "yScaleMax";
}, {
    "activate": "activate";
    "deactivate": "deactivate";
}, ["tooltipTemplate", "seriesTooltipTemplate"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJlYS1jaGFydC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiYXJlYS1jaGFydC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUFJQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUErRkEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBWaWV3RGltZW5zaW9ucyB9IGZyb20gJy4uL2NvbW1vbi92aWV3LWRpbWVuc2lvbnMuaGVscGVyJztcbmltcG9ydCB7IENvbG9ySGVscGVyIH0gZnJvbSAnLi4vY29tbW9uL2NvbG9yLmhlbHBlcic7XG5pbXBvcnQgeyBCYXNlQ2hhcnRDb21wb25lbnQgfSBmcm9tICcuLi9jb21tb24vYmFzZS1jaGFydC5jb21wb25lbnQnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQXJlYUNoYXJ0Q29tcG9uZW50IGV4dGVuZHMgQmFzZUNoYXJ0Q29tcG9uZW50IHtcbiAgICBsZWdlbmQ6IGFueTtcbiAgICBsZWdlbmRUaXRsZTogc3RyaW5nO1xuICAgIGxlZ2VuZFBvc2l0aW9uOiBzdHJpbmc7XG4gICAgc3RhdGU6IGFueTtcbiAgICB4QXhpczogYW55O1xuICAgIHlBeGlzOiBhbnk7XG4gICAgYmFzZVZhbHVlOiBhbnk7XG4gICAgYXV0b1NjYWxlOiBhbnk7XG4gICAgc2hvd1hBeGlzTGFiZWw6IGFueTtcbiAgICBzaG93WUF4aXNMYWJlbDogYW55O1xuICAgIHhBeGlzTGFiZWw6IGFueTtcbiAgICB5QXhpc0xhYmVsOiBhbnk7XG4gICAgdGltZWxpbmU6IGFueTtcbiAgICBncmFkaWVudDogYm9vbGVhbjtcbiAgICBzaG93R3JpZExpbmVzOiBib29sZWFuO1xuICAgIGN1cnZlOiBhbnk7XG4gICAgYWN0aXZlRW50cmllczogYW55W107XG4gICAgc2NoZW1lVHlwZTogc3RyaW5nO1xuICAgIHRyaW1YQXhpc1RpY2tzOiBib29sZWFuO1xuICAgIHRyaW1ZQXhpc1RpY2tzOiBib29sZWFuO1xuICAgIHJvdGF0ZVhBeGlzVGlja3M6IGJvb2xlYW47XG4gICAgbWF4WEF4aXNUaWNrTGVuZ3RoOiBudW1iZXI7XG4gICAgbWF4WUF4aXNUaWNrTGVuZ3RoOiBudW1iZXI7XG4gICAgeEF4aXNUaWNrRm9ybWF0dGluZzogYW55O1xuICAgIHlBeGlzVGlja0Zvcm1hdHRpbmc6IGFueTtcbiAgICB4QXhpc1RpY2tzOiBhbnlbXTtcbiAgICB5QXhpc1RpY2tzOiBhbnlbXTtcbiAgICByb3VuZERvbWFpbnM6IGJvb2xlYW47XG4gICAgdG9vbHRpcERpc2FibGVkOiBib29sZWFuO1xuICAgIHhTY2FsZU1pbjogYW55O1xuICAgIHhTY2FsZU1heDogYW55O1xuICAgIHlTY2FsZU1pbjogbnVtYmVyO1xuICAgIHlTY2FsZU1heDogbnVtYmVyO1xuICAgIGFjdGl2YXRlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBkZWFjdGl2YXRlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICB0b29sdGlwVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgc2VyaWVzVG9vbHRpcFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGRpbXM6IFZpZXdEaW1lbnNpb25zO1xuICAgIHhTZXQ6IGFueTtcbiAgICB4RG9tYWluOiBhbnk7XG4gICAgeURvbWFpbjogYW55O1xuICAgIHNlcmllc0RvbWFpbjogYW55O1xuICAgIHhTY2FsZTogYW55O1xuICAgIHlTY2FsZTogYW55O1xuICAgIHRyYW5zZm9ybTogc3RyaW5nO1xuICAgIGNvbG9yczogQ29sb3JIZWxwZXI7XG4gICAgY2xpcFBhdGhJZDogc3RyaW5nO1xuICAgIGNsaXBQYXRoOiBzdHJpbmc7XG4gICAgc2NhbGVUeXBlOiBzdHJpbmc7XG4gICAgc2VyaWVzOiBhbnk7XG4gICAgbWFyZ2luOiBudW1iZXJbXTtcbiAgICBob3ZlcmVkVmVydGljYWw6IGFueTtcbiAgICB4QXhpc0hlaWdodDogbnVtYmVyO1xuICAgIHlBeGlzV2lkdGg6IG51bWJlcjtcbiAgICBmaWx0ZXJlZERvbWFpbjogYW55O1xuICAgIGxlZ2VuZE9wdGlvbnM6IGFueTtcbiAgICB0aW1lbGluZVdpZHRoOiBhbnk7XG4gICAgdGltZWxpbmVIZWlnaHQ6IG51bWJlcjtcbiAgICB0aW1lbGluZVhTY2FsZTogYW55O1xuICAgIHRpbWVsaW5lWVNjYWxlOiBhbnk7XG4gICAgdGltZWxpbmVYRG9tYWluOiBhbnk7XG4gICAgdGltZWxpbmVUcmFuc2Zvcm06IGFueTtcbiAgICB0aW1lbGluZVBhZGRpbmc6IG51bWJlcjtcbiAgICB1cGRhdGUoKTogdm9pZDtcbiAgICB1cGRhdGVUaW1lbGluZSgpOiB2b2lkO1xuICAgIGdldFhEb21haW4oKTogYW55W107XG4gICAgZ2V0WURvbWFpbigpOiBhbnlbXTtcbiAgICBnZXRTZXJpZXNEb21haW4oKTogYW55W107XG4gICAgZ2V0WFNjYWxlKGRvbWFpbjogYW55LCB3aWR0aDogYW55KTogYW55O1xuICAgIGdldFlTY2FsZShkb21haW46IGFueSwgaGVpZ2h0OiBhbnkpOiBhbnk7XG4gICAgZ2V0U2NhbGVUeXBlKHZhbHVlczogYW55KTogc3RyaW5nO1xuICAgIGlzRGF0ZSh2YWx1ZTogYW55KTogYm9vbGVhbjtcbiAgICB1cGRhdGVEb21haW4oZG9tYWluOiBhbnkpOiB2b2lkO1xuICAgIHVwZGF0ZUhvdmVyZWRWZXJ0aWNhbChpdGVtOiBhbnkpOiB2b2lkO1xuICAgIGhpZGVDaXJjbGVzKCk6IHZvaWQ7XG4gICAgb25DbGljayhkYXRhOiBhbnksIHNlcmllcz86IGFueSk6IHZvaWQ7XG4gICAgdHJhY2tCeShpbmRleDogYW55LCBpdGVtOiBhbnkpOiBzdHJpbmc7XG4gICAgc2V0Q29sb3JzKCk6IHZvaWQ7XG4gICAgZ2V0TGVnZW5kT3B0aW9ucygpOiB7XG4gICAgICAgIHNjYWxlVHlwZTogc3RyaW5nO1xuICAgICAgICBjb2xvcnM6IGFueTtcbiAgICAgICAgZG9tYWluOiBhbnlbXTtcbiAgICAgICAgdGl0bGU6IGFueTtcbiAgICAgICAgcG9zaXRpb246IHN0cmluZztcbiAgICB9O1xuICAgIHVwZGF0ZVlBeGlzV2lkdGgoeyB3aWR0aCB9OiB7XG4gICAgICAgIHdpZHRoOiBhbnk7XG4gICAgfSk6IHZvaWQ7XG4gICAgdXBkYXRlWEF4aXNIZWlnaHQoeyBoZWlnaHQgfToge1xuICAgICAgICBoZWlnaHQ6IGFueTtcbiAgICB9KTogdm9pZDtcbiAgICBvbkFjdGl2YXRlKGl0ZW06IGFueSk6IHZvaWQ7XG4gICAgb25EZWFjdGl2YXRlKGl0ZW06IGFueSk6IHZvaWQ7XG4gICAgZGVhY3RpdmF0ZUFsbCgpOiB2b2lkO1xufVxuIl19