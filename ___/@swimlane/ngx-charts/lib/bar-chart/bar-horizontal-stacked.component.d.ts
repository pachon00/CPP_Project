import { EventEmitter, TemplateRef } from '@angular/core';
import { ViewDimensions } from '../common/view-dimensions.helper';
import { ColorHelper } from '../common/color.helper';
import { BaseChartComponent } from '../common/base-chart.component';
import * as ɵngcc0 from '@angular/core';
export declare class BarHorizontalStackedComponent extends BaseChartComponent {
    legend: boolean;
    legendTitle: string;
    legendPosition: string;
    xAxis: any;
    yAxis: any;
    showXAxisLabel: any;
    showYAxisLabel: any;
    xAxisLabel: any;
    yAxisLabel: any;
    tooltipDisabled: boolean;
    gradient: boolean;
    showGridLines: boolean;
    activeEntries: any[];
    schemeType: string;
    trimXAxisTicks: boolean;
    trimYAxisTicks: boolean;
    rotateXAxisTicks: boolean;
    maxXAxisTickLength: number;
    maxYAxisTickLength: number;
    xAxisTickFormatting: any;
    yAxisTickFormatting: any;
    xAxisTicks: any[];
    yAxisTicks: any[];
    barPadding: number;
    roundDomains: boolean;
    xScaleMax: number;
    showDataLabel: boolean;
    dataLabelFormatting: any;
    noBarWhenZero: boolean;
    activate: EventEmitter<any>;
    deactivate: EventEmitter<any>;
    tooltipTemplate: TemplateRef<any>;
    dims: ViewDimensions;
    groupDomain: any[];
    innerDomain: any[];
    valueDomain: any[];
    xScale: any;
    yScale: any;
    transform: string;
    colors: ColorHelper;
    margin: number[];
    xAxisHeight: number;
    yAxisWidth: number;
    legendOptions: any;
    dataLabelMaxWidth: any;
    update(): void;
    getGroupDomain(): any[];
    getInnerDomain(): any[];
    getValueDomain(): any[];
    getYScale(): any;
    getXScale(): any;
    groupTransform(group: any): string;
    onClick(data: any, group?: any): void;
    trackBy(index: any, item: any): string;
    setColors(): void;
    getLegendOptions(): {
        scaleType: string;
        colors: any;
        domain: any[];
        title: any;
        position: string;
    };
    updateYAxisWidth({ width }: {
        width: any;
    }): void;
    updateXAxisHeight({ height }: {
        height: any;
    }): void;
    onDataLabelMaxWidthChanged(event: any, groupIndex: any): void;
    onActivate(event: any, group: any, fromLegend?: boolean): void;
    onDeactivate(event: any, group: any, fromLegend?: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BarHorizontalStackedComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<BarHorizontalStackedComponent, "ngx-charts-bar-horizontal-stacked", never, {
    "legend": "legend";
    "legendTitle": "legendTitle";
    "legendPosition": "legendPosition";
    "tooltipDisabled": "tooltipDisabled";
    "showGridLines": "showGridLines";
    "activeEntries": "activeEntries";
    "trimXAxisTicks": "trimXAxisTicks";
    "trimYAxisTicks": "trimYAxisTicks";
    "rotateXAxisTicks": "rotateXAxisTicks";
    "maxXAxisTickLength": "maxXAxisTickLength";
    "maxYAxisTickLength": "maxYAxisTickLength";
    "barPadding": "barPadding";
    "roundDomains": "roundDomains";
    "showDataLabel": "showDataLabel";
    "noBarWhenZero": "noBarWhenZero";
    "xAxis": "xAxis";
    "yAxis": "yAxis";
    "showXAxisLabel": "showXAxisLabel";
    "showYAxisLabel": "showYAxisLabel";
    "xAxisLabel": "xAxisLabel";
    "yAxisLabel": "yAxisLabel";
    "gradient": "gradient";
    "schemeType": "schemeType";
    "xAxisTickFormatting": "xAxisTickFormatting";
    "yAxisTickFormatting": "yAxisTickFormatting";
    "xAxisTicks": "xAxisTicks";
    "yAxisTicks": "yAxisTicks";
    "xScaleMax": "xScaleMax";
    "dataLabelFormatting": "dataLabelFormatting";
}, {
    "activate": "activate";
    "deactivate": "deactivate";
}, ["tooltipTemplate"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFyLWhvcml6b250YWwtc3RhY2tlZC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiYmFyLWhvcml6b250YWwtc3RhY2tlZC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUFJQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF3RUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBWaWV3RGltZW5zaW9ucyB9IGZyb20gJy4uL2NvbW1vbi92aWV3LWRpbWVuc2lvbnMuaGVscGVyJztcbmltcG9ydCB7IENvbG9ySGVscGVyIH0gZnJvbSAnLi4vY29tbW9uL2NvbG9yLmhlbHBlcic7XG5pbXBvcnQgeyBCYXNlQ2hhcnRDb21wb25lbnQgfSBmcm9tICcuLi9jb21tb24vYmFzZS1jaGFydC5jb21wb25lbnQnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQmFySG9yaXpvbnRhbFN0YWNrZWRDb21wb25lbnQgZXh0ZW5kcyBCYXNlQ2hhcnRDb21wb25lbnQge1xuICAgIGxlZ2VuZDogYm9vbGVhbjtcbiAgICBsZWdlbmRUaXRsZTogc3RyaW5nO1xuICAgIGxlZ2VuZFBvc2l0aW9uOiBzdHJpbmc7XG4gICAgeEF4aXM6IGFueTtcbiAgICB5QXhpczogYW55O1xuICAgIHNob3dYQXhpc0xhYmVsOiBhbnk7XG4gICAgc2hvd1lBeGlzTGFiZWw6IGFueTtcbiAgICB4QXhpc0xhYmVsOiBhbnk7XG4gICAgeUF4aXNMYWJlbDogYW55O1xuICAgIHRvb2x0aXBEaXNhYmxlZDogYm9vbGVhbjtcbiAgICBncmFkaWVudDogYm9vbGVhbjtcbiAgICBzaG93R3JpZExpbmVzOiBib29sZWFuO1xuICAgIGFjdGl2ZUVudHJpZXM6IGFueVtdO1xuICAgIHNjaGVtZVR5cGU6IHN0cmluZztcbiAgICB0cmltWEF4aXNUaWNrczogYm9vbGVhbjtcbiAgICB0cmltWUF4aXNUaWNrczogYm9vbGVhbjtcbiAgICByb3RhdGVYQXhpc1RpY2tzOiBib29sZWFuO1xuICAgIG1heFhBeGlzVGlja0xlbmd0aDogbnVtYmVyO1xuICAgIG1heFlBeGlzVGlja0xlbmd0aDogbnVtYmVyO1xuICAgIHhBeGlzVGlja0Zvcm1hdHRpbmc6IGFueTtcbiAgICB5QXhpc1RpY2tGb3JtYXR0aW5nOiBhbnk7XG4gICAgeEF4aXNUaWNrczogYW55W107XG4gICAgeUF4aXNUaWNrczogYW55W107XG4gICAgYmFyUGFkZGluZzogbnVtYmVyO1xuICAgIHJvdW5kRG9tYWluczogYm9vbGVhbjtcbiAgICB4U2NhbGVNYXg6IG51bWJlcjtcbiAgICBzaG93RGF0YUxhYmVsOiBib29sZWFuO1xuICAgIGRhdGFMYWJlbEZvcm1hdHRpbmc6IGFueTtcbiAgICBub0JhcldoZW5aZXJvOiBib29sZWFuO1xuICAgIGFjdGl2YXRlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBkZWFjdGl2YXRlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICB0b29sdGlwVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgZGltczogVmlld0RpbWVuc2lvbnM7XG4gICAgZ3JvdXBEb21haW46IGFueVtdO1xuICAgIGlubmVyRG9tYWluOiBhbnlbXTtcbiAgICB2YWx1ZURvbWFpbjogYW55W107XG4gICAgeFNjYWxlOiBhbnk7XG4gICAgeVNjYWxlOiBhbnk7XG4gICAgdHJhbnNmb3JtOiBzdHJpbmc7XG4gICAgY29sb3JzOiBDb2xvckhlbHBlcjtcbiAgICBtYXJnaW46IG51bWJlcltdO1xuICAgIHhBeGlzSGVpZ2h0OiBudW1iZXI7XG4gICAgeUF4aXNXaWR0aDogbnVtYmVyO1xuICAgIGxlZ2VuZE9wdGlvbnM6IGFueTtcbiAgICBkYXRhTGFiZWxNYXhXaWR0aDogYW55O1xuICAgIHVwZGF0ZSgpOiB2b2lkO1xuICAgIGdldEdyb3VwRG9tYWluKCk6IGFueVtdO1xuICAgIGdldElubmVyRG9tYWluKCk6IGFueVtdO1xuICAgIGdldFZhbHVlRG9tYWluKCk6IGFueVtdO1xuICAgIGdldFlTY2FsZSgpOiBhbnk7XG4gICAgZ2V0WFNjYWxlKCk6IGFueTtcbiAgICBncm91cFRyYW5zZm9ybShncm91cDogYW55KTogc3RyaW5nO1xuICAgIG9uQ2xpY2soZGF0YTogYW55LCBncm91cD86IGFueSk6IHZvaWQ7XG4gICAgdHJhY2tCeShpbmRleDogYW55LCBpdGVtOiBhbnkpOiBzdHJpbmc7XG4gICAgc2V0Q29sb3JzKCk6IHZvaWQ7XG4gICAgZ2V0TGVnZW5kT3B0aW9ucygpOiB7XG4gICAgICAgIHNjYWxlVHlwZTogc3RyaW5nO1xuICAgICAgICBjb2xvcnM6IGFueTtcbiAgICAgICAgZG9tYWluOiBhbnlbXTtcbiAgICAgICAgdGl0bGU6IGFueTtcbiAgICAgICAgcG9zaXRpb246IHN0cmluZztcbiAgICB9O1xuICAgIHVwZGF0ZVlBeGlzV2lkdGgoeyB3aWR0aCB9OiB7XG4gICAgICAgIHdpZHRoOiBhbnk7XG4gICAgfSk6IHZvaWQ7XG4gICAgdXBkYXRlWEF4aXNIZWlnaHQoeyBoZWlnaHQgfToge1xuICAgICAgICBoZWlnaHQ6IGFueTtcbiAgICB9KTogdm9pZDtcbiAgICBvbkRhdGFMYWJlbE1heFdpZHRoQ2hhbmdlZChldmVudDogYW55LCBncm91cEluZGV4OiBhbnkpOiB2b2lkO1xuICAgIG9uQWN0aXZhdGUoZXZlbnQ6IGFueSwgZ3JvdXA6IGFueSwgZnJvbUxlZ2VuZD86IGJvb2xlYW4pOiB2b2lkO1xuICAgIG9uRGVhY3RpdmF0ZShldmVudDogYW55LCBncm91cDogYW55LCBmcm9tTGVnZW5kPzogYm9vbGVhbik6IHZvaWQ7XG59XG4iXX0=