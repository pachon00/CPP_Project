import { EventEmitter, TemplateRef } from '@angular/core';
import { ViewDimensions } from '../common/view-dimensions.helper';
import { ColorHelper } from '../common/color.helper';
import { BaseChartComponent } from '../common/base-chart.component';
import { DataItem } from '../models/chart-data.model';
import * as ɵngcc0 from '@angular/core';
export declare class BarVerticalComponent extends BaseChartComponent {
    legend: boolean;
    legendTitle: string;
    legendPosition: string;
    xAxis: any;
    yAxis: any;
    showXAxisLabel: any;
    showYAxisLabel: any;
    xAxisLabel: any;
    yAxisLabel: any;
    tooltipDisabled: boolean;
    gradient: boolean;
    showGridLines: boolean;
    activeEntries: any[];
    schemeType: string;
    trimXAxisTicks: boolean;
    trimYAxisTicks: boolean;
    rotateXAxisTicks: boolean;
    maxXAxisTickLength: number;
    maxYAxisTickLength: number;
    xAxisTickFormatting: any;
    yAxisTickFormatting: any;
    xAxisTicks: any[];
    yAxisTicks: any[];
    barPadding: number;
    roundDomains: boolean;
    roundEdges: boolean;
    yScaleMax: number;
    yScaleMin: number;
    showDataLabel: boolean;
    dataLabelFormatting: any;
    noBarWhenZero: boolean;
    activate: EventEmitter<any>;
    deactivate: EventEmitter<any>;
    tooltipTemplate: TemplateRef<any>;
    dims: ViewDimensions;
    xScale: any;
    yScale: any;
    xDomain: any;
    yDomain: any;
    transform: string;
    colors: ColorHelper;
    margin: any[];
    xAxisHeight: number;
    yAxisWidth: number;
    legendOptions: any;
    dataLabelMaxHeight: any;
    update(): void;
    getXScale(): any;
    getYScale(): any;
    getXDomain(): any[];
    getYDomain(): [number, number];
    onClick(data: DataItem): void;
    setColors(): void;
    getLegendOptions(): {
        scaleType: string;
        colors: any;
        domain: any[];
        title: any;
        position: string;
    };
    updateYAxisWidth({ width }: {
        width: any;
    }): void;
    updateXAxisHeight({ height }: {
        height: any;
    }): void;
    onDataLabelMaxHeightChanged(event: any): void;
    onActivate(item: any, fromLegend?: boolean): void;
    onDeactivate(item: any, fromLegend?: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BarVerticalComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<BarVerticalComponent, "ngx-charts-bar-vertical", never, {
    "legend": "legend";
    "legendTitle": "legendTitle";
    "legendPosition": "legendPosition";
    "tooltipDisabled": "tooltipDisabled";
    "showGridLines": "showGridLines";
    "activeEntries": "activeEntries";
    "trimXAxisTicks": "trimXAxisTicks";
    "trimYAxisTicks": "trimYAxisTicks";
    "rotateXAxisTicks": "rotateXAxisTicks";
    "maxXAxisTickLength": "maxXAxisTickLength";
    "maxYAxisTickLength": "maxYAxisTickLength";
    "barPadding": "barPadding";
    "roundDomains": "roundDomains";
    "roundEdges": "roundEdges";
    "showDataLabel": "showDataLabel";
    "noBarWhenZero": "noBarWhenZero";
    "xAxis": "xAxis";
    "yAxis": "yAxis";
    "showXAxisLabel": "showXAxisLabel";
    "showYAxisLabel": "showYAxisLabel";
    "xAxisLabel": "xAxisLabel";
    "yAxisLabel": "yAxisLabel";
    "gradient": "gradient";
    "schemeType": "schemeType";
    "xAxisTickFormatting": "xAxisTickFormatting";
    "yAxisTickFormatting": "yAxisTickFormatting";
    "xAxisTicks": "xAxisTicks";
    "yAxisTicks": "yAxisTicks";
    "yScaleMax": "yScaleMax";
    "yScaleMin": "yScaleMin";
    "dataLabelFormatting": "dataLabelFormatting";
}, {
    "activate": "activate";
    "deactivate": "deactivate";
}, ["tooltipTemplate"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFyLXZlcnRpY2FsLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJiYXItdmVydGljYWwuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQUtBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXNFQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFZpZXdEaW1lbnNpb25zIH0gZnJvbSAnLi4vY29tbW9uL3ZpZXctZGltZW5zaW9ucy5oZWxwZXInO1xuaW1wb3J0IHsgQ29sb3JIZWxwZXIgfSBmcm9tICcuLi9jb21tb24vY29sb3IuaGVscGVyJztcbmltcG9ydCB7IEJhc2VDaGFydENvbXBvbmVudCB9IGZyb20gJy4uL2NvbW1vbi9iYXNlLWNoYXJ0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEYXRhSXRlbSB9IGZyb20gJy4uL21vZGVscy9jaGFydC1kYXRhLm1vZGVsJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEJhclZlcnRpY2FsQ29tcG9uZW50IGV4dGVuZHMgQmFzZUNoYXJ0Q29tcG9uZW50IHtcbiAgICBsZWdlbmQ6IGJvb2xlYW47XG4gICAgbGVnZW5kVGl0bGU6IHN0cmluZztcbiAgICBsZWdlbmRQb3NpdGlvbjogc3RyaW5nO1xuICAgIHhBeGlzOiBhbnk7XG4gICAgeUF4aXM6IGFueTtcbiAgICBzaG93WEF4aXNMYWJlbDogYW55O1xuICAgIHNob3dZQXhpc0xhYmVsOiBhbnk7XG4gICAgeEF4aXNMYWJlbDogYW55O1xuICAgIHlBeGlzTGFiZWw6IGFueTtcbiAgICB0b29sdGlwRGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgZ3JhZGllbnQ6IGJvb2xlYW47XG4gICAgc2hvd0dyaWRMaW5lczogYm9vbGVhbjtcbiAgICBhY3RpdmVFbnRyaWVzOiBhbnlbXTtcbiAgICBzY2hlbWVUeXBlOiBzdHJpbmc7XG4gICAgdHJpbVhBeGlzVGlja3M6IGJvb2xlYW47XG4gICAgdHJpbVlBeGlzVGlja3M6IGJvb2xlYW47XG4gICAgcm90YXRlWEF4aXNUaWNrczogYm9vbGVhbjtcbiAgICBtYXhYQXhpc1RpY2tMZW5ndGg6IG51bWJlcjtcbiAgICBtYXhZQXhpc1RpY2tMZW5ndGg6IG51bWJlcjtcbiAgICB4QXhpc1RpY2tGb3JtYXR0aW5nOiBhbnk7XG4gICAgeUF4aXNUaWNrRm9ybWF0dGluZzogYW55O1xuICAgIHhBeGlzVGlja3M6IGFueVtdO1xuICAgIHlBeGlzVGlja3M6IGFueVtdO1xuICAgIGJhclBhZGRpbmc6IG51bWJlcjtcbiAgICByb3VuZERvbWFpbnM6IGJvb2xlYW47XG4gICAgcm91bmRFZGdlczogYm9vbGVhbjtcbiAgICB5U2NhbGVNYXg6IG51bWJlcjtcbiAgICB5U2NhbGVNaW46IG51bWJlcjtcbiAgICBzaG93RGF0YUxhYmVsOiBib29sZWFuO1xuICAgIGRhdGFMYWJlbEZvcm1hdHRpbmc6IGFueTtcbiAgICBub0JhcldoZW5aZXJvOiBib29sZWFuO1xuICAgIGFjdGl2YXRlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBkZWFjdGl2YXRlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICB0b29sdGlwVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgZGltczogVmlld0RpbWVuc2lvbnM7XG4gICAgeFNjYWxlOiBhbnk7XG4gICAgeVNjYWxlOiBhbnk7XG4gICAgeERvbWFpbjogYW55O1xuICAgIHlEb21haW46IGFueTtcbiAgICB0cmFuc2Zvcm06IHN0cmluZztcbiAgICBjb2xvcnM6IENvbG9ySGVscGVyO1xuICAgIG1hcmdpbjogYW55W107XG4gICAgeEF4aXNIZWlnaHQ6IG51bWJlcjtcbiAgICB5QXhpc1dpZHRoOiBudW1iZXI7XG4gICAgbGVnZW5kT3B0aW9uczogYW55O1xuICAgIGRhdGFMYWJlbE1heEhlaWdodDogYW55O1xuICAgIHVwZGF0ZSgpOiB2b2lkO1xuICAgIGdldFhTY2FsZSgpOiBhbnk7XG4gICAgZ2V0WVNjYWxlKCk6IGFueTtcbiAgICBnZXRYRG9tYWluKCk6IGFueVtdO1xuICAgIGdldFlEb21haW4oKTogW251bWJlciwgbnVtYmVyXTtcbiAgICBvbkNsaWNrKGRhdGE6IERhdGFJdGVtKTogdm9pZDtcbiAgICBzZXRDb2xvcnMoKTogdm9pZDtcbiAgICBnZXRMZWdlbmRPcHRpb25zKCk6IHtcbiAgICAgICAgc2NhbGVUeXBlOiBzdHJpbmc7XG4gICAgICAgIGNvbG9yczogYW55O1xuICAgICAgICBkb21haW46IGFueVtdO1xuICAgICAgICB0aXRsZTogYW55O1xuICAgICAgICBwb3NpdGlvbjogc3RyaW5nO1xuICAgIH07XG4gICAgdXBkYXRlWUF4aXNXaWR0aCh7IHdpZHRoIH06IHtcbiAgICAgICAgd2lkdGg6IGFueTtcbiAgICB9KTogdm9pZDtcbiAgICB1cGRhdGVYQXhpc0hlaWdodCh7IGhlaWdodCB9OiB7XG4gICAgICAgIGhlaWdodDogYW55O1xuICAgIH0pOiB2b2lkO1xuICAgIG9uRGF0YUxhYmVsTWF4SGVpZ2h0Q2hhbmdlZChldmVudDogYW55KTogdm9pZDtcbiAgICBvbkFjdGl2YXRlKGl0ZW06IGFueSwgZnJvbUxlZ2VuZD86IGJvb2xlYW4pOiB2b2lkO1xuICAgIG9uRGVhY3RpdmF0ZShpdGVtOiBhbnksIGZyb21MZWdlbmQ/OiBib29sZWFuKTogdm9pZDtcbn1cbiJdfQ==