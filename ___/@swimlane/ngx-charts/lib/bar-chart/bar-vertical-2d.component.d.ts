import { EventEmitter, TemplateRef } from '@angular/core';
import { ViewDimensions } from '../common/view-dimensions.helper';
import { ColorHelper } from '../common/color.helper';
import { BaseChartComponent } from '../common/base-chart.component';
import * as ɵngcc0 from '@angular/core';
export declare class BarVertical2DComponent extends BaseChartComponent {
    legend: boolean;
    legendTitle: string;
    legendPosition: string;
    xAxis: any;
    yAxis: any;
    showXAxisLabel: any;
    showYAxisLabel: any;
    xAxisLabel: any;
    yAxisLabel: any;
    tooltipDisabled: boolean;
    scaleType: string;
    gradient: boolean;
    showGridLines: boolean;
    activeEntries: any[];
    schemeType: string;
    trimXAxisTicks: boolean;
    trimYAxisTicks: boolean;
    rotateXAxisTicks: boolean;
    maxXAxisTickLength: number;
    maxYAxisTickLength: number;
    xAxisTickFormatting: any;
    yAxisTickFormatting: any;
    xAxisTicks: any[];
    yAxisTicks: any[];
    groupPadding: number;
    barPadding: number;
    roundDomains: boolean;
    roundEdges: boolean;
    yScaleMax: number;
    showDataLabel: boolean;
    dataLabelFormatting: any;
    noBarWhenZero: boolean;
    activate: EventEmitter<any>;
    deactivate: EventEmitter<any>;
    tooltipTemplate: TemplateRef<any>;
    dims: ViewDimensions;
    groupDomain: any[];
    innerDomain: any[];
    valuesDomain: any[];
    groupScale: any;
    innerScale: any;
    valueScale: any;
    transform: string;
    colors: ColorHelper;
    margin: number[];
    xAxisHeight: number;
    yAxisWidth: number;
    legendOptions: any;
    dataLabelMaxHeight: any;
    update(): void;
    onDataLabelMaxHeightChanged(event: any, groupIndex: any): void;
    getGroupScale(): any;
    getInnerScale(): any;
    getValueScale(): any;
    getGroupDomain(): any[];
    getInnerDomain(): any[];
    getValueDomain(): number[];
    groupTransform(group: any): string;
    onClick(data: any, group?: any): void;
    trackBy(index: any, item: any): any;
    setColors(): void;
    getLegendOptions(): {
        scaleType: string;
        colors: any;
        domain: any[];
        title: any;
        position: string;
    };
    updateYAxisWidth({ width }: {
        width: any;
    }): void;
    updateXAxisHeight({ height }: {
        height: any;
    }): void;
    onActivate(event: any, group: any, fromLegend?: boolean): void;
    onDeactivate(event: any, group: any, fromLegend?: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BarVertical2DComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<BarVertical2DComponent, "ngx-charts-bar-vertical-2d", never, {
    "legend": "legend";
    "legendTitle": "legendTitle";
    "legendPosition": "legendPosition";
    "tooltipDisabled": "tooltipDisabled";
    "scaleType": "scaleType";
    "showGridLines": "showGridLines";
    "activeEntries": "activeEntries";
    "trimXAxisTicks": "trimXAxisTicks";
    "trimYAxisTicks": "trimYAxisTicks";
    "rotateXAxisTicks": "rotateXAxisTicks";
    "maxXAxisTickLength": "maxXAxisTickLength";
    "maxYAxisTickLength": "maxYAxisTickLength";
    "groupPadding": "groupPadding";
    "barPadding": "barPadding";
    "roundDomains": "roundDomains";
    "roundEdges": "roundEdges";
    "showDataLabel": "showDataLabel";
    "noBarWhenZero": "noBarWhenZero";
    "xAxis": "xAxis";
    "yAxis": "yAxis";
    "showXAxisLabel": "showXAxisLabel";
    "showYAxisLabel": "showYAxisLabel";
    "xAxisLabel": "xAxisLabel";
    "yAxisLabel": "yAxisLabel";
    "gradient": "gradient";
    "schemeType": "schemeType";
    "xAxisTickFormatting": "xAxisTickFormatting";
    "yAxisTickFormatting": "yAxisTickFormatting";
    "xAxisTicks": "xAxisTicks";
    "yAxisTicks": "yAxisTicks";
    "yScaleMax": "yScaleMax";
    "dataLabelFormatting": "dataLabelFormatting";
}, {
    "activate": "activate";
    "deactivate": "deactivate";
}, ["tooltipTemplate"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFyLXZlcnRpY2FsLTJkLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJiYXItdmVydGljYWwtMmQuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE2RUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBWaWV3RGltZW5zaW9ucyB9IGZyb20gJy4uL2NvbW1vbi92aWV3LWRpbWVuc2lvbnMuaGVscGVyJztcbmltcG9ydCB7IENvbG9ySGVscGVyIH0gZnJvbSAnLi4vY29tbW9uL2NvbG9yLmhlbHBlcic7XG5pbXBvcnQgeyBCYXNlQ2hhcnRDb21wb25lbnQgfSBmcm9tICcuLi9jb21tb24vYmFzZS1jaGFydC5jb21wb25lbnQnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQmFyVmVydGljYWwyRENvbXBvbmVudCBleHRlbmRzIEJhc2VDaGFydENvbXBvbmVudCB7XG4gICAgbGVnZW5kOiBib29sZWFuO1xuICAgIGxlZ2VuZFRpdGxlOiBzdHJpbmc7XG4gICAgbGVnZW5kUG9zaXRpb246IHN0cmluZztcbiAgICB4QXhpczogYW55O1xuICAgIHlBeGlzOiBhbnk7XG4gICAgc2hvd1hBeGlzTGFiZWw6IGFueTtcbiAgICBzaG93WUF4aXNMYWJlbDogYW55O1xuICAgIHhBeGlzTGFiZWw6IGFueTtcbiAgICB5QXhpc0xhYmVsOiBhbnk7XG4gICAgdG9vbHRpcERpc2FibGVkOiBib29sZWFuO1xuICAgIHNjYWxlVHlwZTogc3RyaW5nO1xuICAgIGdyYWRpZW50OiBib29sZWFuO1xuICAgIHNob3dHcmlkTGluZXM6IGJvb2xlYW47XG4gICAgYWN0aXZlRW50cmllczogYW55W107XG4gICAgc2NoZW1lVHlwZTogc3RyaW5nO1xuICAgIHRyaW1YQXhpc1RpY2tzOiBib29sZWFuO1xuICAgIHRyaW1ZQXhpc1RpY2tzOiBib29sZWFuO1xuICAgIHJvdGF0ZVhBeGlzVGlja3M6IGJvb2xlYW47XG4gICAgbWF4WEF4aXNUaWNrTGVuZ3RoOiBudW1iZXI7XG4gICAgbWF4WUF4aXNUaWNrTGVuZ3RoOiBudW1iZXI7XG4gICAgeEF4aXNUaWNrRm9ybWF0dGluZzogYW55O1xuICAgIHlBeGlzVGlja0Zvcm1hdHRpbmc6IGFueTtcbiAgICB4QXhpc1RpY2tzOiBhbnlbXTtcbiAgICB5QXhpc1RpY2tzOiBhbnlbXTtcbiAgICBncm91cFBhZGRpbmc6IG51bWJlcjtcbiAgICBiYXJQYWRkaW5nOiBudW1iZXI7XG4gICAgcm91bmREb21haW5zOiBib29sZWFuO1xuICAgIHJvdW5kRWRnZXM6IGJvb2xlYW47XG4gICAgeVNjYWxlTWF4OiBudW1iZXI7XG4gICAgc2hvd0RhdGFMYWJlbDogYm9vbGVhbjtcbiAgICBkYXRhTGFiZWxGb3JtYXR0aW5nOiBhbnk7XG4gICAgbm9CYXJXaGVuWmVybzogYm9vbGVhbjtcbiAgICBhY3RpdmF0ZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgZGVhY3RpdmF0ZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgdG9vbHRpcFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGRpbXM6IFZpZXdEaW1lbnNpb25zO1xuICAgIGdyb3VwRG9tYWluOiBhbnlbXTtcbiAgICBpbm5lckRvbWFpbjogYW55W107XG4gICAgdmFsdWVzRG9tYWluOiBhbnlbXTtcbiAgICBncm91cFNjYWxlOiBhbnk7XG4gICAgaW5uZXJTY2FsZTogYW55O1xuICAgIHZhbHVlU2NhbGU6IGFueTtcbiAgICB0cmFuc2Zvcm06IHN0cmluZztcbiAgICBjb2xvcnM6IENvbG9ySGVscGVyO1xuICAgIG1hcmdpbjogbnVtYmVyW107XG4gICAgeEF4aXNIZWlnaHQ6IG51bWJlcjtcbiAgICB5QXhpc1dpZHRoOiBudW1iZXI7XG4gICAgbGVnZW5kT3B0aW9uczogYW55O1xuICAgIGRhdGFMYWJlbE1heEhlaWdodDogYW55O1xuICAgIHVwZGF0ZSgpOiB2b2lkO1xuICAgIG9uRGF0YUxhYmVsTWF4SGVpZ2h0Q2hhbmdlZChldmVudDogYW55LCBncm91cEluZGV4OiBhbnkpOiB2b2lkO1xuICAgIGdldEdyb3VwU2NhbGUoKTogYW55O1xuICAgIGdldElubmVyU2NhbGUoKTogYW55O1xuICAgIGdldFZhbHVlU2NhbGUoKTogYW55O1xuICAgIGdldEdyb3VwRG9tYWluKCk6IGFueVtdO1xuICAgIGdldElubmVyRG9tYWluKCk6IGFueVtdO1xuICAgIGdldFZhbHVlRG9tYWluKCk6IG51bWJlcltdO1xuICAgIGdyb3VwVHJhbnNmb3JtKGdyb3VwOiBhbnkpOiBzdHJpbmc7XG4gICAgb25DbGljayhkYXRhOiBhbnksIGdyb3VwPzogYW55KTogdm9pZDtcbiAgICB0cmFja0J5KGluZGV4OiBhbnksIGl0ZW06IGFueSk6IGFueTtcbiAgICBzZXRDb2xvcnMoKTogdm9pZDtcbiAgICBnZXRMZWdlbmRPcHRpb25zKCk6IHtcbiAgICAgICAgc2NhbGVUeXBlOiBzdHJpbmc7XG4gICAgICAgIGNvbG9yczogYW55O1xuICAgICAgICBkb21haW46IGFueVtdO1xuICAgICAgICB0aXRsZTogYW55O1xuICAgICAgICBwb3NpdGlvbjogc3RyaW5nO1xuICAgIH07XG4gICAgdXBkYXRlWUF4aXNXaWR0aCh7IHdpZHRoIH06IHtcbiAgICAgICAgd2lkdGg6IGFueTtcbiAgICB9KTogdm9pZDtcbiAgICB1cGRhdGVYQXhpc0hlaWdodCh7IGhlaWdodCB9OiB7XG4gICAgICAgIGhlaWdodDogYW55O1xuICAgIH0pOiB2b2lkO1xuICAgIG9uQWN0aXZhdGUoZXZlbnQ6IGFueSwgZ3JvdXA6IGFueSwgZnJvbUxlZ2VuZD86IGJvb2xlYW4pOiB2b2lkO1xuICAgIG9uRGVhY3RpdmF0ZShldmVudDogYW55LCBncm91cDogYW55LCBmcm9tTGVnZW5kPzogYm9vbGVhbik6IHZvaWQ7XG59XG4iXX0=